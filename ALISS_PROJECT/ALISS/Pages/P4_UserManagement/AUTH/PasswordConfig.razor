@page "/AUTH/PasswordConfig"

@inject IJSRuntime jsRuntime
@inject NavigationManager navigationManager

@inject ConfigDataService configDataService
@inject PasswordConfigService passwordConfigService

<div class="container">
    <div class="row">
        <div class="col-12 divHead">
            Password config
        </div>
    </div>
</div>

@if (pageLoading)
{
    <p><em>Loading...</em></p>

    <Loading ShowModel="true" />
}
else
{
    <EditForm Model="@dataModel" OnInvalidSubmit="HandleInvalidSubmit" OnValidSubmit="HandleValidSubmit">
        <DataAnnotationsValidator />

        <div class="container">
            @if ((configData.Get_Edit_Status("pwc_user_min_char")) || mainLayout.loginUser.rol_code == "ROL_00")
            {
                <div class="row  justify-content-center divGroup">
                    <div class="col-3 divLabel">
                        <label>@configData.Get_Label("pwc_user_min_char")</label>
                    </div>
                    <div class="divColon">
                        <label> : </label>
                    </div>
                    <div class="col-4">
                        <RadzenNumeric TValue="int" @bind-Value="dataModel.pwc_user_min_char" Min="0" Max="dataModel.pwc_user_max_char" />
                        <ValidationMessage For="@(() => dataModel.pwc_user_min_char)" />
                    </div>
                </div>
            }
            @if ((configData.Get_Edit_Status("pwc_user_max_char")) || mainLayout.loginUser.rol_code == "ROL_00")
            {
                <div class="row  justify-content-center divGroup">
                    <div class="col-3 divLabel">
                        <label>@configData.Get_Label("pwc_user_max_char")</label>
                    </div>
                    <div class="divColon">
                        <label> : </label>
                    </div>
                    <div class="col-4">
                        <RadzenNumeric TValue="int" @bind-Value="dataModel.pwc_user_max_char" Min="0" Max="99" />
                        <ValidationMessage For="@(() => dataModel.pwc_user_max_char)" />
                        @if (!checkUsernameMaxMin)
                        {
                            <br />
                            <div class="validation-message">Username max char just > min char or = 0</div>
                        }
                    </div>
                </div>
            }
            @if (configData.Get_Edit_Status("pwc_min_char"))
            {
                <div class="row  justify-content-center divGroup">
                    <div class="col-3 divLabel">
                        <label>@configData.Get_Label("pwc_min_char")</label>
                    </div>
                    <div class="divColon">
                        <label> : </label>
                    </div>
                    <div class="col-4">
                        <RadzenNumeric TValue="int" @bind-Value="dataModel.pwc_min_char" Min="0" Max="dataModel.pwc_max_char" />
                        <ValidationMessage For="@(() => dataModel.pwc_min_char)" />
                    </div>
                </div>
            }
            @if (configData.Get_Edit_Status("pwc_max_char"))
            {
                <div class="row  justify-content-center divGroup">
                    <div class="col-3 divLabel">
                        <label>@configData.Get_Label("pwc_max_char")</label>
                    </div>
                    <div class="divColon">
                        <label> : </label>
                    </div>
                    <div class="col-4">
                        <RadzenNumeric TValue="int" @bind-Value="dataModel.pwc_max_char" Min="0" Max="99" />
                        <ValidationMessage For="@(() => dataModel.pwc_max_char)" />
                        @if (!checkPasswordMaxMin)
                        {
                            <br />
                            <div class="col-12 row">
                                <div class="validation-message">Password max char just > min char or = 0</div>
                            </div>
                        }
                    </div>
                </div>
            }
            @if (configData.Get_Edit_Status("pwc_lowwer_letter"))
            {
                <div class="row  justify-content-center divGroup">
                    <div class="col-3 divLabel">
                        <label>@configData.Get_Label("pwc_lowwer_letter")</label>
                    </div>
                    <div class="divColon">
                        <label> : </label>
                    </div>
                    <div class="col-4">
                        <RadzenCheckBox TValue="bool" @bind-Value="dataModel.pwc_lowwer_letter" />
                    </div>
                </div>
            }
            @if (configData.Get_Edit_Status("pwc_upper_letter"))
            {
                <div class="row  justify-content-center divGroup">
                    <div class="col-3 divLabel">
                        <label>@configData.Get_Label("pwc_upper_letter")</label>
                    </div>
                    <div class="divColon">
                        <label> : </label>
                    </div>
                    <div class="col-4">
                        <RadzenCheckBox TValue="bool" @bind-Value="dataModel.pwc_upper_letter" />
                    </div>
                </div>
            }
            @if (configData.Get_Edit_Status("pwc_number"))
            {
                <div class="row  justify-content-center divGroup">
                    <div class="col-3 divLabel">
                        <label>@configData.Get_Label("pwc_number")</label>
                    </div>
                    <div class="divColon">
                        <label> : </label>
                    </div>
                    <div class="col-4">
                        <RadzenCheckBox TValue="bool" @bind-Value="dataModel.pwc_number" />
                    </div>
                </div>
            }
            @if (configData.Get_Edit_Status("pwc_special_char"))
            {
                <div class="row  justify-content-center divGroup">
                    <div class="col-3 divLabel">
                        <label>@configData.Get_Label("pwc_special_char")</label>
                    </div>
                    <div class="divColon">
                        <label> : </label>
                    </div>
                    <div class="col-4">
                        <RadzenCheckBox TValue="bool" @bind-Value="dataModel.pwc_special_char" />
                    </div>
                </div>
            }
            @if (configData.Get_Edit_Status("pwc_max_invalid"))
            {
                <div class="row  justify-content-center divGroup">
                    <div class="col-3 divLabel">
                        <label>@configData.Get_Label("pwc_max_invalid")</label>
                    </div>
                    <div class="divColon">
                        <label> : </label>
                    </div>
                    <div class="col-4">
                        <RadzenNumeric TValue="int" @bind-Value="dataModel.pwc_max_invalid" Min="0" Max="99" />
                        <ValidationMessage For="@(() => dataModel.pwc_max_invalid)" />
                    </div>
                </div>
            }
            @if (configData.Get_Edit_Status("pwc_force_reset"))
            {
                <div class="row  justify-content-center divGroup">
                    <div class="col-3 divLabel">
                        <label>@configData.Get_Label("pwc_force_reset")</label>
                    </div>
                    <div class="divColon">
                        <label> : </label>
                    </div>
                    <div class="col-4">
                        <RadzenNumeric TValue="int" @bind-Value="dataModel.pwc_force_reset" Min="0" Max="99" />
                        <ValidationMessage For="@(() => dataModel.pwc_force_reset)" />
                    </div>
                </div>
            }
            @if ((configData.Get_Edit_Status("pwc_session_timeout")) || mainLayout.loginUser.rol_code == "ROL_00")
            {
                <div class="row  justify-content-center divGroup">
                    <div class="col-3 divLabel">
                        <label>@configData.Get_Label("pwc_session_timeout")</label>
                    </div>
                    <div class="divColon">
                        <label> : </label>
                    </div>
                    <div class="col-4">
                        <RadzenNumeric TValue="int" @bind-Value="dataModel.pwc_session_timeout" Min="0" Max="99" />
                        <ValidationMessage For="@(() => dataModel.pwc_session_timeout)" />
                    </div>
                </div>
            }
            @if ((configData.Get_Edit_Status("pwc_default_password")) || mainLayout.loginUser.rol_code == "ROL_00")
            {
                <div class="row  justify-content-center divGroup">
                    <div class="col-3 divLabel">
                        <label>@configData.Get_Label("pwc_default_password")</label>
                    </div>
                    <div class="divColon">
                        <label> : </label>
                    </div>
                    <div class="col-4">
                        <RadzenTextBox @bind-Value="@dataModel.pwc_default_password" />
                    </div>
                </div>
            }
            <div class="row justify-content-between buttonArea">
                <div class="col-auto">
                    <RadzenButton class="btnCancel" Text="Cancel" Click="RedirectToHome" />
                </div>
                <div class="col-auto">
                    @if (mainLayout.loginUser.PagePermission.rop_create || mainLayout.loginUser.PagePermission.rop_edit)
                    {
                        <RadzenButton Icon="save" class="btnSave" ButtonType="ButtonType.Submit" Text="Save" />
                    }
                </div>
            </div>
        </div>
    </EditForm>
    <hr />

    <HistoryLog HistoryList="historyResultList" />

    <Loading ShowModel="showLoading" />
}

@code {
    [CascadingParameter] MainLayout mainLayout { get; set; }

    private ConfigData configData = new ConfigData();
    private bool showLoading;

    private PasswordConfigDTO dataModel = new PasswordConfigDTO();

    private bool checkUsernameMaxMin { get { return ((dataModel.pwc_user_max_char > dataModel.pwc_user_min_char) || (dataModel.pwc_user_max_char == 0)); } }
    private bool checkPasswordMaxMin { get { return ((dataModel.pwc_max_char > dataModel.pwc_min_char) || (dataModel.pwc_max_char == 0)); } }

    private List<LogProcessDTO> historyResultList;

    private bool pageLoading { get { return (dataModel == null || historyResultList == null); } }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await mainLayout.GetLoginUser();

            if (mainLayout.loginUser.CheckPagePermission("MNU_0101") == false) navigationManager.NavigateTo("/NoPermissionPage");

            configData.ConfigDTOList = await configDataService.Get_TBConfig_DataList_Async(new TBConfigDTO() { tbc_mnu_code = "MNU_0101" });
            if(mainLayout.loginUser.rol_code == "ROL_00")
            {
                configData.ConfigDTOList.ForEach(x => {
                    x.tbc_edit = true;
                });
            }

            dataModel = await passwordConfigService.GetDataAsync();

            historyResultList = await passwordConfigService.GetHistoryAsync();

            StateHasChanged();
        }
    }

    private void RedirectToHome()
    {
        navigationManager.NavigateTo("/Home");
    }


    private void HandleInvalidSubmit()
    {

    }

    private async void HandleValidSubmit()
    {
        if (!checkUsernameMaxMin || !checkPasswordMaxMin)
        {
            await jsRuntime.InvokeAsync<object>("ShowAlert", "Data not valid to save.");

            return;
        }

        var confirmResult = await jsRuntime.InvokeAsync<bool>("ShowConfirm", "Do you want to save data?");
        if (confirmResult)
        {
            showLoading = true;
            StateHasChanged();

            //Save data
            dataModel.pwc_updateuser = mainLayout.loginUser.Username;

            var saveResult = await passwordConfigService.SaveDataAsync(dataModel);

            await jsRuntime.InvokeAsync<object>("ShowAlert", "Save data complete.");


            dataModel = await passwordConfigService.GetDataAsync();

            historyResultList = await passwordConfigService.GetHistoryAsync();

            showLoading = false;
            StateHasChanged();
        }
    }
}
